services:
  db:
    image: mysql:8.4
    container_name: db.${PRJ_NAME}
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - TZ=$TZ
    volumes:
      - ./DB/mysql:/var/lib/mysql
      # - ./CONFIG/mysql:/docker-entrypoint-initdb.d
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    # healthcheck:
    #   test:
    #     [
    #       "CMD",
    #       "mysqladmin",
    #       "ping",
    #       "-u",
    #       "root",
    #       "-p${MYSQL_ROOT_PASSWORD}"
    #     ]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 20
    #   start_period: 30s
    restart: ${DOCKER_RESTART}
    networks:
      - cologi-stack

  mongo:
    container_name: mongo.${PRJ_NAME}
    image: mongo:8.0.3
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE=$MONGO_INITDB_DATABASE
      - TZ=$TZ
    volumes:
      - ./DB/mongo:/data/db
      - ./CONFIG/mongo/configdb:/data/configdb
      - ./CONFIG/mongo/init:/docker-entrypoint-initdb.d
    restart: ${DOCKER_RESTART}
    networks:
      - cologi-stack

  redis:
    container_name: redis.${PRJ_NAME}
    image: redis:7.4
    volumes:
      - ./DB/redis:/data
    restart: ${DOCKER_RESTART}
    networks:
      - cologi-stack

  co_logi:
    container_name: co_logi.${PRJ_NAME}
    image: co_logi/co_logi_server:$PRJ_VERSION
    build:
      context: ./DOCKER/co-logi/
      args:
        # HTTP_PROXY: $HTTP_PROXY
        # HTTPS_PROXY: $HTTPS_PROXY
        # NO_PROXY: $NO_PROXY
        TZ: $TZ
    links:
      - db
      - redis
      - mongo
    ports:
      - ${COLOGI_PORT}:443
    volumes:
      - ./SOURCE/cologi/app:/app
      - ./CONFIG/cologi/nginx-core/nginx.conf:/etc/nginx/nginx.conf
      - ./CONFIG/cologi/nginx-core/mime.types:/etc/nginx/mime.types
      - ./CONFIG/cologi/nginx-core/uwsgi.ini:/etc/uwsgi.ini
      - ./CONFIG/cologi/nginx-core/supervisord.conf:/etc/supervisord.conf
      - ./LOG/cologi-core:/log
      - ./CERTS:/certs
      - ../EBL_DATA:/ebl
    tty: true
    environment:
      - Flask_APP=/app/app.py
      # - HTTP_PROXY=$HTTP_PROXY
      # - HTTPS_PROXY=$HTTPS_PROXY
      # - NO_PROXY=$NO_PROXY
      # - http_proxy=$HTTP_PROXY
      # - https_proxy=$HTTPS_PROXY
      - no_proxy=$NO_PROXY
      - TZ=$TZ
      - CLIENT_MAX_BODY_SIZE=10M
      - COLOGI_DB_USER_NAME=$COLOGI_DB_USER_NAME
      - COLOGI_DB_USER_PASSWORD=$COLOGI_DB_USER_PASSWORD
      - EBL_DIR=/ebl
    depends_on:
      db:
        # condition: service_healthy
        condition: service_started
      mongo:
        condition: service_started
      redis:
        condition: service_started
    restart: ${DOCKER_RESTART}
    networks:
      - cologi-stack

  co_logi_connector:
    container_name: co_logi_connector.${PRJ_NAME}
    build:
      context: ./DOCKER/co-logi-connector/
      args:
        # HTTP_PROXY: $HTTP_PROXY
        # HTTPS_PROXY: $HTTPS_PROXY
        # NO_PROXY: $NO_PROXY
        TZ: $TZ
    image: co_logi/co_logi_server:$PRJ_VERSION
    links:
      - db
      - redis
      - mongo
    ports:
      - ${COLOGI_CONNECTOR_PORT}:443
    volumes:
      - ./SOURCE/cologi-connector/app:/app
      - ./CONFIG/cologi/nginx-connector/nginx.conf:/etc/nginx/nginx.conf
      - ./CONFIG/cologi/nginx-connector/mime.types:/etc/nginx/mime.types
      - ./CONFIG/cologi/nginx-connector/uwsgi.ini:/etc/uwsgi.ini
      - ./CONFIG/cologi/nginx-connector/supervisord.conf:/etc/supervisord.conf
      - ./LOG/cologi-connector:/log
      - ./CERTS:/certs
      - ../EBL_DATA:/ebl
    tty: true
    environment:
      - Flask_APP=/app/app.py
      - Flask_ENV=development
      - DATABASE_URI=mysql+pymysql://root:password@db/delivery_app_db
      - REDIS_URL=redis://redis:6379/0
      # - HTTP_PROXY=$HTTP_PROXY
      # - HTTPS_PROXY=$HTTPS_PROXY
      # - NO_PROXY=$NO_PROXY
      # - http_proxy=$HTTP_PROXY
      # - https_proxy=$HTTPS_PROXY
      - no_proxy=$NO_PROXY
      - TZ=$TZ
      - CLIENT_MAX_BODY_SIZE=10M
      - COLOGI_DB_USER_NAME=$COLOGI_DB_USER_NAME
      - COLOGI_DB_USER_PASSWORD=$COLOGI_DB_USER_PASSWORD
      - EBL_DIR=/ebl
    depends_on:
      db:
        # condition: service_healthy
        condition: service_started
      mongo:
        condition: service_started
      redis:
        condition: service_started
    restart: ${DOCKER_RESTART}
    networks:
      - cologi-stack


  # デバッグ用
  # phpmyadmin:
  #   container_name: phpmyadmin.${PRJ_NAME}
  #   image: phpmyadmin/phpmyadmin:latest
  #   ports:
  #     - ${PHPMYADIMN_PORT}:80
  #   links:
  #     - db
  #   depends_on:
  #     db:
  #       # condition: service_healthy
  #       condition: service_started
  #   environment:
  #     - MYSQL_USERNAME=root
  #     - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
  #     - TZ=$TZ
  #     - PMA_HOST=db
  #   restart: ${DOCKER_RESTART}
  #   networks:
  #     - cologi-stack

  # デバッグ用
  # mongo_express:
  #   container_name: mongo_exp.${PRJ_NAME}
  #   image: mongo-express
  #   ports:
  #     - ${MONGO_EXP_PORT}:8081
  #   depends_on:
  #     - mongo
  #   environment:
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_INITDB_ROOT_USERNAME
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_INITDB_ROOT_PASSWORD
  #     - ME_CONFIG_MONGODB_SERVER=mongo
  #     - ME_CONFIG_BASICAUTH_USERNAME=extserver.admin # mongo-expressアクセス時に要求されるユーザー名
  #     - ME_CONFIG_BASICAUTH_PASSWORD=admin # mongo-expressアクセス時に要求されるパスワード
  #   restart: ${DOCKER_RESTART}
  #   networks:
  #     - cologi-stack

networks:
  cologi-stack:


